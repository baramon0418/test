# -*- coding: utf-8 -*-
"""기계학습.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t8YKjvxN1FxAjKTYV3dWKajYAXyey5Fe
"""

# * * AND 퍼셉트론  * *
import numpy as np

def AND_Perceptron(x1,x2):
    x = np.array([x1,x2])
    w = np.array([0.5,0.5])
    b = -0.7
    theta = 0


    tmp = np.sum(w*x)+b
 
    if tmp > theta:
        return 1
    elif tmp <= theta:
        return 0

input = np.array([[0,0],[0,1],[1,0],[1,1]])
print(" * * AND 퍼셉트론  * *")

for a in input:
    print(str(a) + "==>" + str(AND_Perceptron(a[0],a[1])))

# * * OR 퍼셉트론  * *
import numpy as np

def OR_Perceptron(x1,x2):
    w=np.array([0.5,0.5])
    b= -0.2
    theta=0

    x=np.array([x1,x2])
    tmp=np.sum(w*x)+b

    if tmp>theta:
        return 1
    elif tmp <= theta:
        return 0

input = np.array([[0,0],[0,1],[1,0],[1,1]])
print(" * * OR 퍼셉트론  * *")

for b in input:
    print(str(b) + "==>" + str(OR_Perceptron(b[0],b[1])))

# * * NAND 퍼셉트론  * *
import numpy as np

def NAND_Perceptron(x1,x2):
    w=np.array([-0.5,-0.5])
    b= 0.7
    theta= 0

    x=np.array([x1,x2])

    tmp=np.sum(w*x)+b

    if tmp>theta:
        return 1
    elif tmp <= theta:
        return 0

input = np.array([[0,0],[0,1],[1,0],[1,1]])
print(" * * NAND 퍼셉트론  * *")

for c in input:
    print(str(c) + "==>" + str(NAND_Perceptron(c[0],c[1])))

# * * XOR 퍼셉트론  * *
import numpy as np

def XORPerceptron(x1,x2):
    s1=NAND_Perceptron(x1,x2)
    s2=OR_Perceptron(x1,x2)
    s3=AND_Perceptron(s1,s2)
    return s3

input = np.array([[0,0],[0,1],[1,0],[1,1]])
print(" * * XOR 퍼셉트론  * *")

for d in input:
    print(str(d) + "==>" + str(XORPerceptron(d[0],d[1])))